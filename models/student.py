from sqlalchemy import Column, Integer, String, Boolean, DateTime

# StuartAPI classes
from common.db import Base


class StudentModel(Base):
	__tablename__ = 'api__student'
	id = Column(String[20],  nullable=False, primary_key=True, name='StudentID')
	name = Column(String[60],  nullable=False, primary_key=False, name='Student')
	prefix = Column(String[10],  nullable=False, primary_key=False, name='Prefix')
	first_name = Column(String[20],  nullable=False, primary_key=False, name='FirstName')
	middle_name = Column(String[30],  nullable=False, primary_key=False, name='MiddleName')
	last_name = Column(String[30],  nullable=False, primary_key=False, name='LastName')
	first_name_pref = Column(String[55],  nullable=False, primary_key=False, name='FirstNamePref')
	middle_name_pref = Column(String[55],  nullable=False, primary_key=False, name='MiddleNamePref')
	last_name_pref = Column(String[55],  nullable=False, primary_key=False, name='LastNamePref')
	suffix = Column(String[10],  nullable=False, primary_key=False, name='Suffix')
	phonetic = Column(String[130],  nullable=False, primary_key=False, name='Phonetic')
	mobile_phone = Column(String[20],  nullable=False, primary_key=False, name='MobilePhone')
	email_address = Column(String[60],  nullable=False, primary_key=False, name='EmailAddress')
	alt_email = Column(String[80],  nullable=False, primary_key=False, name='AltEmail')
	sex = Column(String[1],  nullable=False, primary_key=False, name='Sex')
	marital_status = Column(String[1],  nullable=False, primary_key=False, name='MaritalStatus')
	ethnic_origin = Column(String[2],  nullable=False, primary_key=False, name='EthnicOrigin')
	military = Column(String[1],  nullable=False, primary_key=False, name='Military')
	handicap = Column(String[1],  nullable=False, primary_key=False, name='Handicap')
	honor_society = Column(DateTime,  nullable=False, primary_key=False, name='HonorSociety')
	locker_number = Column(String[10],  nullable=False, primary_key=False, name='LockerNumber')
	birth_date = Column(DateTime,  nullable=False, primary_key=False, name='BirthDate')
	birth_city = Column(String[20],  nullable=False, primary_key=False, name='BirthCity')
	birth_state = Column(String[2],  nullable=False, primary_key=False, name='BirthState')
	birth_country = Column(String[2],  nullable=False, primary_key=False, name='BirthCountry')
	legal_res_state = Column(String[2],  nullable=False, primary_key=False, name='LegalResState')
	legal_res_country = Column(String[2],  nullable=False, primary_key=False, name='LegalResCountry')
	visa = Column(String[2],  nullable=False, primary_key=False, name='Visa')
	citizen_country = Column(String[2],  nullable=False, primary_key=False, name='CitizenCountry')
	diploma_name = Column(String[130],  nullable=False, primary_key=False, name='DiplomaName')
	announced_name = Column(String[130],  nullable=False, primary_key=False, name='AnnouncedName')
	announced_phonetic = Column(String[130],  nullable=False, primary_key=False, name='AnnouncedPhonetic')
	dean_letter_score = Column(String[50],  nullable=False, primary_key=False, name='DeanLetterScore')
	notes = Column(String,  nullable=False, primary_key=False, name='Notes')
	utln = Column(String[8],  nullable=False, primary_key=False, name='UTLN')
	trunk = Column(String[32],  nullable=False, primary_key=False, name='TRUNK')
	usmle = Column(String[20],  nullable=False, primary_key=False, name='USMLE')
	aamc_id = Column(Integer,  nullable=False, primary_key=False, name='AAMC_ID')
	race1 = Column(String[10],  nullable=False, primary_key=False, name='Race1')
	race2 = Column(String[10],  nullable=False, primary_key=False, name='Race2')
	race3 = Column(String[10],  nullable=False, primary_key=False, name='Race3')
	race4 = Column(String[10],  nullable=False, primary_key=False, name='Race4')
	race5 = Column(String[10],  nullable=False, primary_key=False, name='Race5')
	race6 = Column(String[10],  nullable=False, primary_key=False, name='Race6')
	race7 = Column(String[10],  nullable=False, primary_key=False, name='Race7')
	race8 = Column(String[10],  nullable=False, primary_key=False, name='Race8')
	race9 = Column(String[10],  nullable=False, primary_key=False, name='Race9')
	race10 = Column(String[10],  nullable=False, primary_key=False, name='Race10')
	ethnic1 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic1')
	ethnic2 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic2')
	ethnic3 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic3')
	ethnic4 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic4')
	ethnic5 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic5')
	ethnic6 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic6')
	ethnic7 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic7')
	ethnic8 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic8')
	ethnic9 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic9')
	ethnic10 = Column(String[10],  nullable=False, primary_key=False, name='Ethnic10')
	is_hispanic = Column(String[1],  nullable=False, primary_key=False, name='IsHispanic')
	urm = Column(String[15],  nullable=False, primary_key=False, name='URM')
	phonetic_url = Column(String,  nullable=False, primary_key=False, name='PhoneticURL')
	tufts_medicine_upn = Column(String[100],  nullable=False, primary_key=False, name='TuftsMedicine_UPN')
	tufts_medicine_username = Column(String[50],  nullable=False, primary_key=False, name='TuftsMedicine_UserName')
	pronoun = Column(String[30],  nullable=False, primary_key=False, name='Pronoun')
	created_date = Column(DateTime,  nullable=False, primary_key=False, name='CreatedDate')
	created_by = Column(String[32],  nullable=False, primary_key=False, name='CreatedBy')
	modified_date = Column(DateTime,  nullable=False, primary_key=False, name='ModifiedDate')
	modified_by = Column(String[32],  nullable=False, primary_key=False, name='ModifiedBy')
	is_registered = Column(Integer,  nullable=False, primary_key=False, name='IsRegistered')
	grad_year = Column(String[4],  nullable=False, primary_key=False, name='GradYear')

	def resolve_fields(fields: str):

		# get columns form field list using the required and defaults
		fields = ["id", "name"] if fields is None else fields.split(",")
		return [getattr(StudentModel, field) for field in fields]
